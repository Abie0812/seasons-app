{"version":3,"sources":["SeasonDisplay.js","Spinner.js","Clock.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","_seasonConfig$season","console","log","react_default","a","createElement","Fragment","className","concat","Spinner","message","defaultProps","Clock","state","time","toLocaleTimeString","_this2","this","setInterval","setState","React","Component","App","errorMessage","src_Spinner","src_SeasonDisplay_0","src_Clock_0","renderContent","window","navigator","geolocation","getCurrentPosition","position","coords","latitude","err","ReactDOM","render","src_App","document","querySelector"],"mappings":"iNAGMA,SAAe,CACjBC,OAAQ,CACJC,KAAM,sBACNC,SAAU,OAEdC,OAAQ,CACJF,KAAM,mBACNC,SAAU,eA4BHE,EAhBO,SAAAC,GAClB,IATeC,EAAKC,EASdC,GATSF,EASUD,EAAMC,KATXC,GASgB,IAAIE,MAAOC,YARnC,GAAKH,EAAQ,EACdD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAILK,EAEAZ,EAAaS,GAAhCP,EAFmBU,EAEnBV,KAAMC,EAFaS,EAEbT,SAGd,OAFAU,QAAQC,IAAI,CAACZ,OAAMC,aAGfY,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAS,kBAAAC,OAAoBX,IAC9BM,EAAAC,EAAAC,cAAA,KAAGE,UAAS,qBAAAC,OAAuBjB,EAAvB,WACZY,EAAAC,EAAAC,cAAA,UAAKf,GACLa,EAAAC,EAAAC,cAAA,KAAGE,UAAS,sBAAAC,OAAwBjB,EAAxB,cC9BtBkB,EAAU,SAACf,GACb,OACIS,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBAAsBb,EAAMgB,YAM3DD,EAAQE,aAAe,CACnBD,QAAS,cAGED,QCKAG,oNAjBXC,MAAQ,CAAEC,MAAM,IAAIhB,MAAOiB,yGAEP,IAAAC,EAAAC,KAChBC,YAAY,WACRF,EAAKG,SAAS,CAAEL,MAAM,IAAIhB,MAAOiB,wBAClC,sCAIH,OACIZ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAf,SACWU,KAAKJ,MAAMC,aAZdM,IAAMC,YCKpBC,6MACFT,MAAQ,CAAElB,IAAK,KAAM4B,aAAc,qFAG/B,OAAIN,KAAKJ,MAAMU,eAAiBN,KAAKJ,MAAMlB,IAChCQ,EAAAC,EAAAC,cAACmB,EAAD,CAASd,QAASO,KAAKJ,MAAMU,gBAGnCN,KAAKJ,MAAMU,cAAgBN,KAAKJ,MAAMlB,IAChCQ,EAAAC,EAAAC,cAACoB,EAAD,CAAe9B,IAAKsB,KAAKJ,MAAMlB,MAGnCQ,EAAAC,EAAAC,cAACmB,EAAD,CAASd,QAAQ,oEAIxB,OACIP,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAACqB,EAAD,MACCT,KAAKU,6DAKE,IAAAX,EAAAC,KAChBW,OAAOC,UAAUC,YAAYC,mBACzB,SAAAC,GAAQ,OAAIhB,EAAKG,SAAS,CAAExB,IAAKqC,EAASC,OAAOC,YACjD,SAAAC,GAAG,OAAInB,EAAKG,SAAS,CAAEI,aAAcY,EAAIzB,mBA3BnCU,IAAMC,WAiCxBe,IAASC,OAAOlC,EAAAC,EAAAC,cAACiC,EAAD,MAAQC,SAASC,cAAc","file":"static/js/main.6a9f813e.chunk.js","sourcesContent":["import './SeasonDisplay.css';\r\nimport React from 'react';\r\n\r\nconst seasonConfig = {\r\n    summer: {\r\n        text: 'Let\\'s hit the beach',\r\n        iconName: 'sun'\r\n    },\r\n    winter: {\r\n        text: 'Burr, it is cold',\r\n        iconName: 'snowflake'\r\n    }\r\n};\r\n\r\nconst getSeason = (lat, month) => {\r\n    if (month > 2 && month < 9) { // Northern Hemisphere\r\n        return lat > 0 ? 'summer' : 'winter';\r\n    } else { // Southern Hemisphere\r\n        return lat < 0 ? 'winter' : 'summer';\r\n    }\r\n};\r\n\r\nconst SeasonDisplay = props => {\r\n    const season = getSeason(props.lat, new Date().getMonth());\r\n    const { text, iconName } = seasonConfig[season];\r\n    console.log({text, iconName});\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={`season-display ${season}`}>\r\n                <i className={`icon-left massive ${iconName} icon`} />\r\n                <h1>{text}</h1>\r\n                <i className={`icon-right massive ${iconName} icon`} />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SeasonDisplay;","import React from 'react';\r\n\r\nconst Spinner = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"ui active dimmer\">\r\n                <div className=\"ui big text loader\">{props.message}</div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nSpinner.defaultProps = {\r\n    message: 'Loading...'\r\n};\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './Clock.css';\r\n\r\nclass Clock extends React.Component {\r\n    state = { time: new Date().toLocaleTimeString() };\r\n\r\n    componentDidMount() {\r\n        setInterval(() => {\r\n            this.setState({ time: new Date().toLocaleTimeString() });\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"time\">\r\n                Time: {this.state.time}\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Clock;","// Import the React and ReactDOM libraries\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay from './SeasonDisplay';\r\nimport Spinner from './Spinner';\r\nimport Clock from './Clock';\r\n\r\n// Create a react component\r\nclass App extends React.Component {\r\n    state = { lat: null, errorMessage: null };\r\n\r\n    renderContent() {\r\n        if (this.state.errorMessage && !this.state.lat) {\r\n            return <Spinner message={this.state.errorMessage} />\r\n        }\r\n\r\n        if (!this.state.errorMessage && this.state.lat) {\r\n            return <SeasonDisplay lat={this.state.lat} />;\r\n        }\r\n\r\n        return <Spinner message=\"Please accept location request\" />;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Clock />\r\n                {this.renderContent()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.navigator.geolocation.getCurrentPosition(\r\n            position => this.setState({ lat: position.coords.latitude }),\r\n            err => this.setState({ errorMessage: err.message })\r\n        );\r\n    }\r\n}\r\n\r\n// Take the react component and show it on the screen\r\nReactDOM.render(<App/>, document.querySelector('#root'));\r\n"],"sourceRoot":""}